<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tt.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="picAiLogConversation.ToolTip" xml:space="preserve">
    <value>Every session in the conversation to the AI is stored in this folder.
The conversation is not only what you can see in the UI,
but also internal messages back and forth, e.g. the metadata
that the AI may need.
This logging is not used by the tool, you may clean the
folder whenever you want to, this is just to give you the
opportunity to learn even more, to see what the AI is asking
the tool about.
Note that this type of detail logs are only stored locally, not
in any external system!</value>
  </data>
  <data name="picAiLogFolder.ToolTip" xml:space="preserve">
    <value>Every session in the conversation to the AI is stored in this folder.
The conversation is not only what you can see in the UI,
but also internal messages back and forth, e.g. the metadata
that the AI may need.
This logging is not used by the tool, you may clean the
folder whenever you want to, this is just to give you the
opportunity to learn even more, to see what the AI is asking
the tool about.
Note that this type of detail logs are only stored locally, not
in any external system!</value>
  </data>
  <data name="chkAiLogConversation.ToolTip" xml:space="preserve">
    <value>Accepting this makes it possible to log your conversation to and from the AI.
The reason is mostly to be able to debug strange resposes, to hopefully
improve the feature.
This log is stored in Azure Application Insights.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnResetXmlColors.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAAd0SU1FB9YFFw00AlBhtEwAAAKWSURBVDhPlZN7TM5xFMY/7+99GzbyhmKulbGl
        GXL5A7GERRnzB81cJlvMcq1oLqtJoZKWTMqtjGlzS2NKtCK9eFVDlBEaGzZzm2br8tiv3j/SP3i27/bd
        2TnPznnOc+DvsHR7/4hZ1wYSlJfRZ9mN1wNW3vpG8FmHbc7JBKAfYOue/ieWOKZ6RlV+OPZIyqqVYsul
        aQWSR9wnMSUrH/AB3LqXdWJF3VjfuNqvRY1S+GUppEAKOi8F5EkjT0h9Y5rarePWHwBGdHYS9TS+d2x9
        IZ7+gwmItPeJcjwrfiNFFEnLC6VhMTW/mJlyxzLryH2PLQ2tvvkSE3aXAWFAXwLT61uyHkgE7TlM2KnU
        UzVt2lEmRRVL/SJuvDMGTzRbPgrsso5bl+0V/7G919KSz8AmYAij4h++uvpSGr+/7qff3ic/LjVI225L
        k9IaW4zh088AKcACYDQwxm1JSbX72up2IBEYiTWytLDohbS3Qkoqb1VCuRR7s13G7ORSIBtYBAx0Ke9m
        Dbtwzh7pbAWSOkhtq64k5ThbdLBKSq6QcmuksfsaZIRkOozF+aXMz93mWp21wwdzz8e5hV1oAnYDo+i5
        pjh6Ud4HFdRJqXelHKeU7ZQSK6V9Tsk/+XUbdu9QF4mFeRc3Wufk3AY2AL5gd/cYn/n+e2G9lFElpd+X
        0h9I4ee+yGfX42br/EPXge2dyRgsKNpkm5F0EFjWIaI5m9eBRsedJinrXrNCT3+SPdrx1haccB1brzwg
        zZVs6mAh+GwAvYcEAtMBD5PAYttcmeCX+rzZCD9RZfiFmsofd6m8GpgMDOrivB4usgFdLW0ymcbYCWwF
        FporA7xcBV2PyPybhUaXWEegP+ANDAXsrth/XF8n/vNk4TdJyRkK0j8cKAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAEcAAABHAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC/vbu6lX+1dEu6ZjK7ZjG1ckm5knu/u7kAAAAAAAAAAAAAAAAAAAAAAAAAAAC6
        mYW/VhXjWAD6YQD/YwD/YwD7YgDlWADBVRG5lH0AAAAAAAAAAAAAAAAAAAC4h2nVUgH+YwD/YwD/YwD/
        YwD/YwD/YwD/YwD/YwDZVAC3gF4AAAAAAAAAAAC6mYXVUgH/YwDMgjN6tIXyaw3/YwD/YwD7ZgSBsH61
        kEr/YwDaVAC5knoAAADAvbu+Vxb+YwD/YwCvlFAA//9jwpz/YwD/YwCAsH8A//+HrXj/YwD/YwDCVA+/
        ura6loCydTCfnmD/YwD+ZAFI07cB//64jkfPgDAF/Por5dSErnuIrHeHrXjDcCS4jnS1dE2skU5bx6T/
        YwD/YwDrbxQd7uIb7uQs5NMK+fXTfiwd7eK/ikCjm1wq49O2bUG5ZjK5jkY728SfnmChnF7/YwDBiT4C
        /v0A//+Wo2n/YwAo59fJhDazkkwu49G9YSe6ZjO4jkc728SZoWaZoWb/YwDHhTgC/f0A//+dn2L/YwAk
        6dt6tIVVy6pyuY2+YCe1c0utkU5G1Lm7jUSzkkzkdBsi6t0U8uss5NML+PTUfSsg69/sbhO3j0g13ci2
        bD+5lH28cCeNqXKLqnR+soFH07gA//+omFfSfi0G+/kq5dVsvZNsvZN3tojAcym4jHG/vLrAVRP+YwD/
        YwC0kUsA//9TzKz/YwD/YwCErnsA//+Jq3b/YwD/YwDEUw2/uLUAAAC6loDYUwD/YwDDhzxlwZrpcBb/
        YwD/YwD7ZQR1uIqulVH/YwDdVQC4jnQAAAAAAAAAAAC3gmHZVAD/YwD/YwD/YwD/YwD/YwD/YwD/YwD/
        YwDdVQC3elUAAAAAAAAAAAAAAAAAAAC5lH3BVBDmWQD9YgD/YwD/YwD9YgDoWgDEUw25jnQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC/ure5kHa2b0K9Yim9YSm2bUC4jXK/ubUAAAAAAAAAAAAAAADwDwAA4AcAAMAD
        AACAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAwAMAAOAHAADwDwAA
</value>
  </data>
</root>